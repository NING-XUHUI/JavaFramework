ch01-hello-mybatis: 入门例子

实现步骤：
1 新建的student表
2 加入maven的mybatis坐标， mysql驱动的坐标
3 创建实体类， student--保存表中的一行数据
4 创建持久层的DAO接口，定义操作数据库的方法
5 创建mybatis使用的配置文件
    叫做sql映射文件：写sql语句的，一般一个表一个sql映射文件
    这个文件是xml文件
    1. 在借口所在的目录中
    2. 文件名称与借口一样
6 创建mybatis的主配置文件：
    一个项目中就一个主配置文件
    主配置文件提供了数据库的连接信息和sql映射文件的位置信息
7 创建使用mybatis类
    通过mybatis访问数据库



mybatis提供了哪些功能？
1 提供了创建Connection, Statement, ResultSet的能力，不用开发人员创建这些对象了
2 提供了执行sql语句的能力，不用你执行sql
3 提供了循环sql，把sql的结果转为java对象，List集合的能力
4 提供了关闭资源的能力，不用你关闭Connetion，Statement，ResultSet

开发人员做的是：提供sql语句
最后是：开发人员提供sql语句--mybatis处理sql--开发人员得到List集合或java对象（表中的数据）
总结：
    mybatis是一个sql映射框架，提供的数据库的操作能力，增强的JDBC
    使用mybatis让开发人员集中精神写sql就可以了，不必关心Connection，Statement，ResultSet
    的创建，销毁

第二章：
    1 主要类的介绍
    1）Resources：mybatis中的一个类，负责读取主配置文件
    InputStream in = Resources.getResourceAsStream("mybatis.xml")

    2) SqlSessionFactoryBuilder：创建SqlSessionFactory对象
    SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();
    SqlSessionFactory factory = builder.build(in);

    3）SqlSessionFactory：重量级对象，程序创建一个对象耗时比较长，使用资源比较多
    在整个项目中有一个就够了
    SqlSessionFactory:接口，接口实现类：DefaultSqlSessionFactory
    作用：获取SqlSession对象

    openSession()方法说明：
        1 openSession()无参数：获取的是非自动提交事务的SqlSession对象
        2 openSession(boolean)：openSession(true)获取自动提交事务的对象，false即非自动提交事务的对象

    4）SqlSession
    SqlSession接口：定义了操作数据的方法 例如selectOne(),insert(),selectList()....
    SqlSession接口的实现类

    使用要求：SqlSession对象不是线程安全的，需要在方法内部使用，在执行sql语句之前，使用openSession()获取SqlSession，在
    执行完sql语句之后，需要关闭它，执行SqlSession.close()方法
